name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions :rocket:
on: [push]
permissions:
  contents: write
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
    - run: echo ":tada: The job was automatiquement triggered by a ${{ github.event_name }} event."
    - run: echo ":penguin: This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo ":mag_right: The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Check out repository code 
      uses: actions/checkout@v4
    - run: echo ":bulb: The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo ":desktop: The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - name: Show job status
      run: echo ":green_apple: This job's status is ${{ job.status }}."
    - name: Créer un fichier de rapport et l'archive avec date
      run: |
        DATE=$(date +%Y%m%d-%H%M%S)
        echo "Exécution du workflow à la date : $DATE" > rapport_${DATE}.txt
        zip archive_${DATE}.zip *.java
    - name: Comparer les archives et créer le rapport final
      run: |
        LAST_ARCHIVE=$(ls -t archive_*.zip | head -n 1)
        PREVIOUS_ARCHIVE=$(ls -t archive_*.zip | head -n 2 | tail -n 1)
        
        echo "" >> rapport.txt
        echo "Contenu de la dernière archive ($LAST_ARCHIVE) :" >> rapport.txt
        unzip -l $LAST_ARCHIVE >> rapport.txt
        
        if [ -f "$PREVIOUS_ARCHIVE" ]; then
          unzip -l $LAST_ARCHIVE > last.txt
          unzip -l $PREVIOUS_ARCHIVE > previous.txt
          echo "" >> rapport.txt
          echo "Différences entre $LAST_ARCHIVE et $PREVIOUS_ARCHIVE :" >> rapport.txt
          diff previous.txt last.txt >> rapport.txt
        else
          echo "" >> rapport.txt
          echo "Aucune archive précédente pour la comparaison." >> rapport.txt
        fi
    - name: Commit et push
      run: |
        git config --global user.name Fletcher-Prog
        git config --global user.email aarab.anas04@gmail.com
        git add .
        git commit -m "Mise à jour avec rapport et archive datés"
        git push
